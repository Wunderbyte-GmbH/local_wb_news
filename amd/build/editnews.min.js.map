{"version":3,"file":"editnews.min.js","sources":["../src/editnews.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\n\nconst SELECTORS = {\n    ADDEDITBUTTON: 'div.wb-news-addeditbutton',\n    DELETEBUTTON: 'div.wb-news-deletebutton',\n};\n\nexport const init = () => {\n    // eslint-disable-next-line no-console\n    console.log('run init');\n\n    // Cashout functionality.\n    const buttons = document.querySelectorAll(SELECTORS.ADDEDITBUTTON);\n\n    // eslint-disable-next-line no-console\n    console.log('buttons', buttons);\n\n    if (buttons) {\n        buttons.forEach(button => {\n            button.addEventListener('click', e => {\n\n                // eslint-disable-next-line no-console\n                console.log(e.target);\n\n                addeditformModal(button);\n            });\n        });\n    }\n\n    // Cashout functionality.\n    const deletebuttons = document.querySelectorAll(SELECTORS.DELETEBUTTON);\n\n    // eslint-disable-next-line no-console\n    console.log('deletebuttons', deletebuttons);\n\n    if (deletebuttons) {\n        deletebuttons.forEach(button => {\n            button.addEventListener('click', e => {\n\n                // eslint-disable-next-line no-console\n                console.log(e.target);\n\n                deleteModal(button);\n            });\n        });\n    }\n};\n\n/**\n * Show add edit form.\n  * @param {htmlElement} button\n  * @return [type]\n  *\n  */\nexport function addeditformModal(button) {\n\n    // eslint-disable-next-line no-console\n    console.log('button', button);\n\n    const id = button.dataset.id;\n    const isinstance = button.dataset.isinstance;\n\n    let formclass = \"local_wb_news\\\\form\\\\addeditModal\";\n    if (isinstance == 'true') {\n        formclass = \"local_wb_news\\\\form\\\\addeditInstanceModal\";\n    }\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: formclass,\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {\n            id\n        },\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('addeditform', 'local_wb_news')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n\n        location.reload();\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}\n\n/**\n * Show add edit form.\n  * @param {htmlElement} button\n  * @return [type]\n  *\n  */\nexport function deleteModal(button) {\n\n    // eslint-disable-next-line no-console\n    console.log('button', button);\n\n    const id = button.dataset.id;\n    const isinstance = button.dataset.isinstance;\n\n    let formclass = \"local_wb_news\\\\form\\\\addeditModal\";\n    if (isinstance == 'true') {\n        formclass = \"local_wb_news\\\\form\\\\addeditInstanceModal\";\n    }\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: formclass,\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {\n            id\n        },\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('deletenewsitem', 'local_wb_news')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n\n        location.reload();\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}"],"names":["SELECTORS","addeditformModal","button","console","log","id","dataset","formclass","isinstance","modalForm","ModalForm","formClass","args","modalConfig","title","returnFocus","addEventListener","events","FORM_SUBMITTED","location","reload","show","deleteModal","buttons","document","querySelectorAll","forEach","e","target","deletebuttons"],"mappings":";;;;;kOAyBMA,wBACa,4BADbA,uBAEY,oCAkDFC,iBAAiBC,QAG7BC,QAAQC,IAAI,SAAUF,cAEhBG,GAAKH,OAAOI,QAAQD,OAGtBE,UAAY,oCACE,QAHCL,OAAOI,QAAQE,aAI9BD,UAAY,mDAGVE,UAAY,IAAIC,mBAAU,CAG5BC,UAAWJ,UAEXK,KAAM,CACFP,GAAAA,IAGJQ,YAAa,CAACC,OAAO,mBAAU,cAAe,kBAE9CC,YAAab,SAIjBO,UAAUO,iBAAiBP,UAAUQ,OAAOC,gBAAgB,KAExDC,SAASC,YAIbX,UAAUY,gBAUEC,YAAYpB,QAGxBC,QAAQC,IAAI,SAAUF,cAEhBG,GAAKH,OAAOI,QAAQD,OAGtBE,UAAY,oCACE,QAHCL,OAAOI,QAAQE,aAI9BD,UAAY,mDAGVE,UAAY,IAAIC,mBAAU,CAG5BC,UAAWJ,UAEXK,KAAM,CACFP,GAAAA,IAGJQ,YAAa,CAACC,OAAO,mBAAU,iBAAkB,kBAEjDC,YAAab,SAIjBO,UAAUO,iBAAiBP,UAAUQ,OAAOC,gBAAgB,KAExDC,SAASC,YAIbX,UAAUY,qBA7HM,KAEhBlB,QAAQC,IAAI,kBAGNmB,QAAUC,SAASC,iBAAiBzB,yBAG1CG,QAAQC,IAAI,UAAWmB,SAEnBA,SACAA,QAAQG,SAAQxB,SACZA,OAAOc,iBAAiB,SAASW,IAG7BxB,QAAQC,IAAIuB,EAAEC,QAEd3B,iBAAiBC,oBAMvB2B,cAAgBL,SAASC,iBAAiBzB,wBAGhDG,QAAQC,IAAI,gBAAiByB,eAEzBA,eACAA,cAAcH,SAAQxB,SAClBA,OAAOc,iBAAiB,SAASW,IAG7BxB,QAAQC,IAAIuB,EAAEC,QAEdN,YAAYpB"}